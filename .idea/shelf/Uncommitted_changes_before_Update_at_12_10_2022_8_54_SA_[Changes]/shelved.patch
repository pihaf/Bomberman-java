Index: src/uet/oop/bomberman/entities/Bomber.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman.entities;\r\nimport javafx.scene.SnapshotParameters;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.paint.Color;\r\nimport uet.oop.bomberman.graphics.Sprite;\r\nimport javax.swing.plaf.basic.BasicTreeUI;\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class Bomber extends AnimatedEntity {\r\n    int bombNum ;\r\n    private boolean isBomb = false;\r\n    private ArrayList<Bomb> bombs = new ArrayList<>();\r\n    private int radius;\r\n    private KeyCode direction = null;\r\n    private int timeAfterDie = 0;\r\n    public Bomber(int x, int y, Image img ) {\r\n        super( x, y, img);\r\n        setSpeed(2);\r\n        bombNum = 1;\r\n        setRadius(1);\r\n    }\r\n\r\n    public void setRadius(int radius) {\r\n        this.radius = radius;\r\n    }\r\n\r\n    @Override\r\n    // xu ly animation cua bomberman\r\n    public void update() {\r\n\r\n        if(direction==KeyCode.RIGHT) {\r\n            goRight();\r\n        }\r\n        if (direction == KeyCode.LEFT) {\r\n            goLeft();\r\n        }\r\n        if (direction == KeyCode.DOWN) {\r\n            goDown();\r\n        }\r\n        if (direction == KeyCode.UP) {\r\n            goUp();\r\n        }\r\n        if(isBomb) {\r\n            placeBomb();\r\n        }\r\n        for (int i = 0; i < bombs.size(); i++) {\r\n            Bomb bomb = bombs.get(i);\r\n            if (!bomb.isAlive()) {\r\n                bombs.remove(bomb);\r\n                bombNum++;\r\n            }\r\n        }\r\n        //\r\n        if(!isAlive()) {\r\n            timeAfterDie ++;\r\n            die();\r\n        }\r\n    }\r\n    // sử lý di chuyển cho bomb\r\n    public void handleKeyPressedEvent(KeyCode keyCode) {\r\n\r\n        if (keyCode == KeyCode.LEFT || keyCode == KeyCode.RIGHT\r\n                || keyCode == KeyCode.UP || keyCode == KeyCode.DOWN ||keyCode==KeyCode.SPACE) {\r\n            this.direction = keyCode;\r\n        }\r\n        if (keyCode == KeyCode.SPACE) {\r\n            isBomb = true;\r\n        }\r\n    }\r\n    // sử lý di chuyển cho bomb\r\n    public void handleKeyReleasedEvent(KeyCode keyCode) {\r\n        if (direction == keyCode) {\r\n            if (direction == KeyCode.LEFT) {\r\n                img = Sprite.player_left.getFxImage();\r\n            }\r\n            if (direction == KeyCode.RIGHT) {\r\n                img = Sprite.player_right.getFxImage();\r\n            }\r\n            if (direction == KeyCode.UP) {\r\n                img = Sprite.player_up.getFxImage();\r\n            }\r\n            if (direction == KeyCode.DOWN) {\r\n                img = Sprite.player_down.getFxImage();\r\n            }\r\n            if (direction == KeyCode.SPACE) {\r\n                isBomb = false;\r\n            }\r\n            direction = null;\r\n        }\r\n    }\r\n    public void goLeft() {\r\n        super.goLeft();\r\n        img = Sprite.movingSprite(Sprite.player_left, Sprite.player_left_1, Sprite.player_left_2, xx++, 20).getFxImage();\r\n    }\r\n\r\n    public void goRight() {\r\n        super.goRight();\r\n        img = Sprite.movingSprite(Sprite.player_right, Sprite.player_right_1, Sprite.player_right_2,xx++ , 20).getFxImage();\r\n    }\r\n\r\n    public void goUp() {\r\n        super.goUp();\r\n        img = Sprite.movingSprite(Sprite.player_up, Sprite.player_up_1, Sprite.player_up_2, xx++, 20).getFxImage();\r\n    }\r\n\r\n    public void goDown() {\r\n        super.goDown();\r\n        img = Sprite.movingSprite(Sprite.player_down, Sprite.player_down_1, Sprite.player_down_2,xx++ , 20).getFxImage();\r\n    }\r\n    public void placeBomb() {\r\n        if (bombNum > 0) {\r\n            int xB = (int) Math.round((x + 4) / (double) Sprite.SCALED_SIZE);\r\n            int yB = (int) Math.round((y + 4) / (double) Sprite.SCALED_SIZE);\r\n            for (Bomb bomb : bombs) {\r\n                if (xB * Sprite.SCALED_SIZE == bomb.x && yB * Sprite.SCALED_SIZE == bomb.y) return;\r\n            }\r\n            bombs.add(new Bomb(xB, yB, Sprite.bomb.getFxImage()));\r\n            bombNum--;\r\n        }\r\n    }\r\n    public ArrayList<Bomb> getBombs() {\r\n        return bombs;\r\n    }\r\n@Override\r\npublic Rectangle getHitBox() {\r\n    return new Rectangle(desX, desY, Sprite.SCALED_SIZE-15 , Sprite.SCALED_SIZE);\r\n}\r\n    public void die() {\r\n        direction = null;\r\n        stay();\r\n        if(timeAfterDie <= 30) {\r\n            img = Sprite.movingSprite(Sprite.player_dead1, Sprite.player_dead2,\r\n                    Sprite.player_dead3, timeAfterDie, 20).getFxImage();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/uet/oop/bomberman/entities/Bomber.java b/src/uet/oop/bomberman/entities/Bomber.java
--- a/src/uet/oop/bomberman/entities/Bomber.java	(revision 8742d624292caa02d816cba79ec819d9fdd904f1)
+++ b/src/uet/oop/bomberman/entities/Bomber.java	(date 1665538136331)
@@ -89,11 +89,11 @@
             if (direction == KeyCode.DOWN) {
                 img = Sprite.player_down.getFxImage();
             }
-            if (direction == KeyCode.SPACE) {
-                isBomb = false;
-            }
             direction = null;
         }
+        if (keyCode == KeyCode.SPACE) {
+            isBomb = false;
+        }
     }
     public void goLeft() {
         super.goLeft();
@@ -130,7 +130,7 @@
     }
 @Override
 public Rectangle getHitBox() {
-    return new Rectangle(desX, desY, Sprite.SCALED_SIZE-15 , Sprite.SCALED_SIZE);
+    return new Rectangle(desX, desY, Sprite.SCALED_SIZE-10 , Sprite.SCALED_SIZE);
 }
     public void die() {
         direction = null;
Index: src/uet/oop/bomberman/BombermanGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman;\r\n\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.application.Application;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.SubScene;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.stage.Stage;\r\nimport uet.oop.bomberman.entities.*;\r\nimport uet.oop.bomberman.graphics.Sprite;\r\nimport javafx.scene.control.Button;\r\n\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport javafx.scene.layout.FlowPane;\r\npublic class BombermanGame extends Application  {\r\n    public static final int WIDTH = 20;\r\n\r\n    public static final int HEIGHT = 15;\r\n    private int xStart;\r\n    private int yStart;\r\n    private GraphicsContext gc;\r\n    private Canvas canvas;\r\n    public static List<Entity> entities = new ArrayList<>();\r\n    public static List<Entity> stillObjects = new ArrayList<>();\r\n\r\n    public static final List<Flame> flameList = new ArrayList<>();\r\n\r\n    //start flame radius, neu co powerups thi tang len\r\n    public int flameRadius = 1;\r\n    public int startBomb = 1;\r\n    public int startSpeed = 2;\r\n    public int startFlame = 1;\r\n    private Bomber bomberman = new Bomber(1 , 1, Sprite.player_right.getFxImage());\r\n    public static void main(String[] args) {\r\n        Application.launch(BombermanGame.class);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n\r\n\r\n        // Tao Canvas\r\n        canvas = new Canvas(Sprite.SCALED_SIZE * WIDTH, Sprite.SCALED_SIZE * HEIGHT);\r\n        gc = canvas.getGraphicsContext2D();\r\n\r\n        // Tao root container\r\n        Group root = new Group();\r\n        root.getChildren().add(canvas);\r\n        // Tao scene\r\n        Scene scene = new Scene(root);\r\n\r\n        // Them scene vao stage\r\n        stage.setScene(scene);\r\n        stage.show();\r\n        createMap();\r\n        ArrayList<Bomb> bombs = bomberman.getBombs();\r\n        entities.add(bomberman);\r\n        AnimationTimer timer = new AnimationTimer() {\r\n            public long prevTime = 0;\r\n            @Override\r\n            public void handle(long now) {\r\n            long dt = now - prevTime;\r\n                if (dt > 10000000) {\r\n                    render();\r\n                    update();\r\n                    prevTime = now;\r\n                }\r\n            }\r\n\r\n\r\n        };\r\n        timer.start();\r\n        // chep cua o kia tu nhien dc :))\r\n        scene.setOnKeyPressed(event -> {\r\n            bomberman.handleKeyPressedEvent(event.getCode());\r\n        });\r\n        scene.setOnKeyReleased(event -> bomberman.handleKeyReleasedEvent(event.getCode()));\r\n\r\n    }\r\n\r\n    //tao map\r\n    public void createMap() {\r\n        for (int i = 0; i < WIDTH; i++) {\r\n            for (int j = 0; j < HEIGHT; j++) {\r\n                Entity object;\r\n                Entity brick = null;\r\n                if (j == 0 || j == HEIGHT - 1 || i == 0 || i == WIDTH - 1) {\r\n                    object = new Wall(i, j, Sprite.wall.getFxImage());\r\n                } else {\r\n                    object = new Grass(i, j, Sprite.grass.getFxImage());\r\n                    if (i % 2 == 0 && j % 2 == 0) {\r\n                        brick = new Brick(i, j, Sprite.brick.getFxImage());\r\n                    }\r\n                }\r\n                stillObjects.add(object);\r\n                if (brick != null) stillObjects.add(brick);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void update() {\r\n        bomberman.move();\r\n        // animation cho cac entity\r\n        entities.forEach(Entity::update);\r\n        for (int i = 0; i < flameList.size(); i ++) {\r\n            flameList.get(i).update();\r\n        }\r\n        bomberman.update();\r\n        ArrayList<Bomb> bombs = bomberman.getBombs();\r\n        // cac hoat dong cua bom\r\n        for(Bomb bomb : bombs) {\r\n            bomb.update();\r\n        }\r\n        for (int i = 0; i < stillObjects.size(); i ++) {\r\n            stillObjects.get(i).update();\r\n        }\r\n        handleCollision();\r\n        checkCollisionFlame();\r\n    }\r\n\r\n    public void render() {\r\n        gc.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());\r\n        stillObjects.forEach(g -> g.render(gc));\r\n        entities.forEach(g -> g.render(gc));\r\n        // cai nay cung chua xu ly duoc\r\n        ArrayList<Bomb> bombs = bomberman.getBombs();\r\n        for (Bomb bomb : bombs) {\r\n            bomb.render(gc);\r\n        }\r\n        flameList.forEach(g -> g.render(gc));\r\n    }\r\n// handle collision, da xong phan cuc da\r\n    public void handleCollision() {\r\n        Rectangle bomber = bomberman.getHitBox();\r\n        for (Entity stillObject : stillObjects) {\r\n            Rectangle r = stillObject.getHitBox();\r\n            if ((stillObject instanceof Wall || stillObject instanceof Brick) && bomber.intersects(r)) {\r\n                bomberman.stay();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * flame collision.\r\n     *\r\n     */\r\n    public void checkCollisionFlame() {\r\n        for (Flame flame : flameList) {\r\n            Rectangle r1 = flame.getHitBox();\r\n            for (Entity stillObject : stillObjects) {\r\n                Rectangle r2 = stillObject.getHitBox();\r\n                //!stillObject instanceof Item\r\n                if (r1.intersects(r2)) {\r\n                    stillObject.setAlive(false);\r\n                }\r\n            }\r\n            //chua co check va cham voi enemy\r\n            Rectangle r2 = bomberman.getHitBox();\r\n            if (r1.intersects(r2)) {\r\n                bomberman.setAlive(false);\r\n                startBomb = 1;\r\n                startFlame = 1;\r\n                startSpeed = 1;\r\n            }\r\n                if (!bomberman.isAlive()) {\r\n                    Timer count = new Timer();\r\n                    count.schedule(new TimerTask() {\r\n                        @Override\r\n                        public void run() {\r\n                            entities.remove(bomberman);\r\n                            bomberman = new Bomber(1, 1, Sprite.player_right.getFxImage());\r\n                            entities.add(bomberman);\r\n                            count.cancel();\r\n\r\n                        }\r\n\r\n                    }\r\n                    , 500, 1);\r\n                    break;//dead sound\r\n                }\r\n            }\r\n        }\r\n        }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/uet/oop/bomberman/BombermanGame.java b/src/uet/oop/bomberman/BombermanGame.java
--- a/src/uet/oop/bomberman/BombermanGame.java	(revision 8742d624292caa02d816cba79ec819d9fdd904f1)
+++ b/src/uet/oop/bomberman/BombermanGame.java	(date 1665468821607)
@@ -23,6 +23,7 @@
 import javafx.scene.layout.FlowPane;
 public class BombermanGame extends Application  {
     public static final int WIDTH = 20;
+    public static int liveRemain = 2 ;
 
     public static final int HEIGHT = 15;
     private int xStart;
@@ -171,7 +172,7 @@
                 startFlame = 1;
                 startSpeed = 1;
             }
-                if (!bomberman.isAlive()) {
+                if (!bomberman.isAlive()&&liveRemain>0) {
                     Timer count = new Timer();
                     count.schedule(new TimerTask() {
                         @Override
@@ -180,12 +181,14 @@
                             bomberman = new Bomber(1, 1, Sprite.player_right.getFxImage());
                             entities.add(bomberman);
                             count.cancel();
+                            liveRemain--;
 
                         }
 
                     }
                     , 500, 1);
-                    break;//dead sound
+                    break;
+                    //dead sound
                 }
             }
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7aeba08b-cbb4-4017-810a-cfdeb6e02045\" name=\"Changes\" comment=\"animatedEntity\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/uet/oop/bomberman/BombermanGame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/uet/oop/bomberman/BombermanGame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/uet/oop/bomberman/entities/AnimatedEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/uet/oop/bomberman/entities/AnimatedEntity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/uet/oop/bomberman/entities/Bomber.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/uet/oop/bomberman/entities/Bomber.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomb.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomb.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomber.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomber.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Entity.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Entity.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FQT91OiCOLxiwC7Ffe7PFOyJHd\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"testbom\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"uet.oop.bomberman.BombermanGame\" />\r\n      <module name=\"bomberman\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"uet.oop.bomberman.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7aeba08b-cbb4-4017-810a-cfdeb6e02045\" name=\"Changes\" comment=\"\" />\r\n      <created>1664423153855</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1664423153855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"animatedEntity\">\r\n      <created>1664778890600</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1664778890600</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"animatedEntity\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"animatedEntity\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8742d624292caa02d816cba79ec819d9fdd904f1)
+++ b/.idea/workspace.xml	(date 1665453086412)
@@ -7,13 +7,11 @@
     <list default="true" id="7aeba08b-cbb4-4017-810a-cfdeb6e02045" name="Changes" comment="animatedEntity">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/uet/oop/bomberman/BombermanGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/uet/oop/bomberman/BombermanGame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/uet/oop/bomberman/entities/AnimatedEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/uet/oop/bomberman/entities/AnimatedEntity.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/uet/oop/bomberman/entities/Bomber.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/uet/oop/bomberman/entities/Bomber.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame$2.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/BombermanGame.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomb.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomb.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomber.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Bomber.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Entity.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/uet/oop/bomberman/entities/Entity.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
